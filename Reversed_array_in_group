class Solution:
    # Function to reverse every sub-array group of size k.
    def reverseInGroups(self, arr, k):
        if k>len(arr):
            i, j = 0, len(arr)-1
            while i<j:
                arr[i],arr[j]=arr[j],arr[i]
                i+=1
                j-=1
            return arr
        
        else:
            i , j = 0, k-1
            while i<j:
                arr[i] , arr[j] = arr[j] , arr[i]
                i+=1
                j-=1
            
            i,j = k, len(arr)-1
            while i<j:
                arr[i] , arr[j] = arr[j] , arr[i]
                i+=1
                j-=1
            
            return arr
#-------------------------------------------------------------------------------------------------------------------------------------------------
# more optimized and check all cases, divides the array in multiple subarray

class Solution:
    # Function to reverse every sub-array group of size k.
    def reverseInGroups(self, arr, k):
        new_arr=[]
        rem=len(arr)%k
        start = 0
        
        if k>len(arr):
            arr.reverse()
            return arr
        
        elif rem == 0:
            mul = len(arr)/k
            
            for i in range(1, int(mul)+1):
                temp_arr = arr[start:i*k]
                temp_arr.reverse()
                new_arr += temp_arr
                temp_arr.clear()
                start = i*k
            
        elif rem >0:
            mul = len(arr)//k
            
            for i in range(1, mul+2):
                temp_arr = arr[start:i*k]
                temp_arr.reverse()
                new_arr += temp_arr
                temp_arr.clear()
                start = i*k
        arr.clear()
        arr[:] = new_arr
        
        return arr
